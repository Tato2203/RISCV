CCS PCM C Compiler, Version 5.059, 5967               17-jul.-18 21:35

               Filename:   C:\Users\¡¡¡VIVA EL BASKET!!!\Desktop\Progra\PIC\Servo2\Servo2.lst

               ROM used:   291 words (4%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   029
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #use DELAY(CLOCK=8M) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
0018:  MOVLW  08
0019:  SUBWF  22,F
001A:  BTFSS  03.0
001B:  GOTO   028
001C:  MOVLW  22
001D:  MOVWF  04
001E:  BCF    03.7
001F:  BCF    03.0
0020:  RRF    00,F
0021:  MOVF   00,W
0022:  BTFSC  03.2
0023:  GOTO   028
0024:  GOTO   026
0025:  NOP
0026:  DECFSZ 00,F
0027:  GOTO   025
0028:  RETURN
.................... #FUSES HS, NOWDT, NOLVP 
.................... int i; 
....................  
....................  
.................... void main(){ 
0029:  MOVF   03,W
002A:  ANDLW  1F
002B:  MOVWF  03
002C:  BSF    03.5
002D:  BSF    1F.0
002E:  BSF    1F.1
002F:  BSF    1F.2
0030:  BCF    1F.3
0031:  MOVLW  07
0032:  MOVWF  1C
0033:  BCF    03.7
....................    while(true){ 
....................     
....................       for(i=0;i<=200;i++) { 
0034:  BCF    03.5
0035:  CLRF   20
0036:  MOVF   20,W
0037:  SUBLW  C8
0038:  BTFSS  03.0
0039:  GOTO   071
....................          output_high(pin_b0); 
003A:  BSF    03.5
003B:  BCF    06.0
003C:  BCF    03.5
003D:  BSF    06.0
....................          output_high(pin_b1); 
003E:  BSF    03.5
003F:  BCF    06.1
0040:  BCF    03.5
0041:  BSF    06.1
....................          output_high(pin_b2); 
0042:  BSF    03.5
0043:  BCF    06.2
0044:  BCF    03.5
0045:  BSF    06.2
....................          output_high(pin_b3); 
0046:  BSF    03.5
0047:  BCF    06.3
0048:  BCF    03.5
0049:  BSF    06.3
....................          output_high(pin_b4); 
004A:  BSF    03.5
004B:  BCF    06.4
004C:  BCF    03.5
004D:  BSF    06.4
....................          delay_us(1600); 
004E:  MOVLW  01
004F:  MOVWF  21
0050:  CALL   004
0051:  MOVLW  03
0052:  MOVWF  21
0053:  MOVLW  C6
0054:  MOVWF  22
0055:  CALL   018
0056:  DECFSZ 21,F
0057:  GOTO   053
....................          output_low(pin_b0); 
0058:  BSF    03.5
0059:  BCF    06.0
005A:  BCF    03.5
005B:  BCF    06.0
....................          output_low(pin_b1); 
005C:  BSF    03.5
005D:  BCF    06.1
005E:  BCF    03.5
005F:  BCF    06.1
....................          output_low(pin_b2); 
0060:  BSF    03.5
0061:  BCF    06.2
0062:  BCF    03.5
0063:  BCF    06.2
....................          output_low(pin_b3); 
0064:  BSF    03.5
0065:  BCF    06.3
0066:  BCF    03.5
0067:  BCF    06.3
....................          output_low(pin_b4); 
0068:  BSF    03.5
0069:  BCF    06.4
006A:  BCF    03.5
006B:  BCF    06.4
....................          delay_us(19000); 
006C:  MOVLW  13
006D:  MOVWF  21
006E:  CALL   004
006F:  INCF   20,F
0070:  GOTO   036
....................       } 
....................        
....................       for(i=0;i<=70;i++) { 
0071:  CLRF   20
0072:  MOVF   20,W
0073:  SUBLW  46
0074:  BTFSS  03.0
0075:  GOTO   0AD
....................          output_high(pin_b0); 
0076:  BSF    03.5
0077:  BCF    06.0
0078:  BCF    03.5
0079:  BSF    06.0
....................          output_high(pin_b1); 
007A:  BSF    03.5
007B:  BCF    06.1
007C:  BCF    03.5
007D:  BSF    06.1
....................          output_high(pin_b2); 
007E:  BSF    03.5
007F:  BCF    06.2
0080:  BCF    03.5
0081:  BSF    06.2
....................          output_high(pin_b3); 
0082:  BSF    03.5
0083:  BCF    06.3
0084:  BCF    03.5
0085:  BSF    06.3
....................          output_high(pin_b4); 
0086:  BSF    03.5
0087:  BCF    06.4
0088:  BCF    03.5
0089:  BSF    06.4
....................          delay_us(1300); 
008A:  MOVLW  01
008B:  MOVWF  21
008C:  CALL   004
008D:  MOVLW  02
008E:  MOVWF  21
008F:  MOVLW  94
0090:  MOVWF  22
0091:  CALL   018
0092:  DECFSZ 21,F
0093:  GOTO   08F
....................          output_low(pin_b0); 
0094:  BSF    03.5
0095:  BCF    06.0
0096:  BCF    03.5
0097:  BCF    06.0
....................          output_low(pin_b1); 
0098:  BSF    03.5
0099:  BCF    06.1
009A:  BCF    03.5
009B:  BCF    06.1
....................          output_low(pin_b2); 
009C:  BSF    03.5
009D:  BCF    06.2
009E:  BCF    03.5
009F:  BCF    06.2
....................          output_low(pin_b3); 
00A0:  BSF    03.5
00A1:  BCF    06.3
00A2:  BCF    03.5
00A3:  BCF    06.3
....................          output_low(pin_b4); 
00A4:  BSF    03.5
00A5:  BCF    06.4
00A6:  BCF    03.5
00A7:  BCF    06.4
....................          delay_us(19000); 
00A8:  MOVLW  13
00A9:  MOVWF  21
00AA:  CALL   004
00AB:  INCF   20,F
00AC:  GOTO   072
....................       } 
....................        
....................        for(i=0;i<=200;i++) { 
00AD:  CLRF   20
00AE:  MOVF   20,W
00AF:  SUBLW  C8
00B0:  BTFSS  03.0
00B1:  GOTO   0E5
....................          output_high(pin_b0); 
00B2:  BSF    03.5
00B3:  BCF    06.0
00B4:  BCF    03.5
00B5:  BSF    06.0
....................          output_high(pin_b1); 
00B6:  BSF    03.5
00B7:  BCF    06.1
00B8:  BCF    03.5
00B9:  BSF    06.1
....................          output_high(pin_b2); 
00BA:  BSF    03.5
00BB:  BCF    06.2
00BC:  BCF    03.5
00BD:  BSF    06.2
....................          output_high(pin_b3); 
00BE:  BSF    03.5
00BF:  BCF    06.3
00C0:  BCF    03.5
00C1:  BSF    06.3
....................          output_high(pin_b4); 
00C2:  BSF    03.5
00C3:  BCF    06.4
00C4:  BCF    03.5
00C5:  BSF    06.4
....................          delay_us(1100); 
00C6:  MOVLW  01
00C7:  MOVWF  21
00C8:  CALL   004
00C9:  MOVLW  64
00CA:  MOVWF  22
00CB:  CALL   018
....................          output_low(pin_b0); 
00CC:  BSF    03.5
00CD:  BCF    06.0
00CE:  BCF    03.5
00CF:  BCF    06.0
....................          output_low(pin_b1); 
00D0:  BSF    03.5
00D1:  BCF    06.1
00D2:  BCF    03.5
00D3:  BCF    06.1
....................          output_low(pin_b2); 
00D4:  BSF    03.5
00D5:  BCF    06.2
00D6:  BCF    03.5
00D7:  BCF    06.2
....................          output_low(pin_b3); 
00D8:  BSF    03.5
00D9:  BCF    06.3
00DA:  BCF    03.5
00DB:  BCF    06.3
....................          output_low(pin_b4); 
00DC:  BSF    03.5
00DD:  BCF    06.4
00DE:  BCF    03.5
00DF:  BCF    06.4
....................          delay_us(19000); 
00E0:  MOVLW  13
00E1:  MOVWF  21
00E2:  CALL   004
00E3:  INCF   20,F
00E4:  GOTO   0AE
....................       } 
....................        
....................       for(i=0;i<=70;i++) { 
00E5:  CLRF   20
00E6:  MOVF   20,W
00E7:  SUBLW  46
00E8:  BTFSS  03.0
00E9:  GOTO   121
....................          output_high(pin_b0); 
00EA:  BSF    03.5
00EB:  BCF    06.0
00EC:  BCF    03.5
00ED:  BSF    06.0
....................          output_high(pin_b1); 
00EE:  BSF    03.5
00EF:  BCF    06.1
00F0:  BCF    03.5
00F1:  BSF    06.1
....................          output_high(pin_b2); 
00F2:  BSF    03.5
00F3:  BCF    06.2
00F4:  BCF    03.5
00F5:  BSF    06.2
....................          output_high(pin_b3); 
00F6:  BSF    03.5
00F7:  BCF    06.3
00F8:  BCF    03.5
00F9:  BSF    06.3
....................          output_high(pin_b4); 
00FA:  BSF    03.5
00FB:  BCF    06.4
00FC:  BCF    03.5
00FD:  BSF    06.4
....................          delay_us(1300); 
00FE:  MOVLW  01
00FF:  MOVWF  21
0100:  CALL   004
0101:  MOVLW  02
0102:  MOVWF  21
0103:  MOVLW  94
0104:  MOVWF  22
0105:  CALL   018
0106:  DECFSZ 21,F
0107:  GOTO   103
....................          output_low(pin_b0); 
0108:  BSF    03.5
0109:  BCF    06.0
010A:  BCF    03.5
010B:  BCF    06.0
....................          output_low(pin_b1); 
010C:  BSF    03.5
010D:  BCF    06.1
010E:  BCF    03.5
010F:  BCF    06.1
....................          output_low(pin_b2); 
0110:  BSF    03.5
0111:  BCF    06.2
0112:  BCF    03.5
0113:  BCF    06.2
....................          output_low(pin_b3); 
0114:  BSF    03.5
0115:  BCF    06.3
0116:  BCF    03.5
0117:  BCF    06.3
....................          output_low(pin_b4); 
0118:  BSF    03.5
0119:  BCF    06.4
011A:  BCF    03.5
011B:  BCF    06.4
....................          delay_us(19000); 
011C:  MOVLW  13
011D:  MOVWF  21
011E:  CALL   004
011F:  INCF   20,F
0120:  GOTO   0E6
....................       } 
0121:  GOTO   035
....................    } 
.................... } 
0122:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
