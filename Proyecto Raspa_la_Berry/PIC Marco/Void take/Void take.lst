CCS PCM C Compiler, Version 5.059, 5967               18-ago.-18 15:10

               Filename:   C:\Users\¡¡¡VIVA EL BASKET!!!\Desktop\Progra\PIC\Void take\Void take.lst

               ROM used:   510 words (6%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   029
0003:  NOP
.................... #include<16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #use DELAY (CLOCK=8M) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
0018:  MOVLW  08
0019:  SUBWF  22,F
001A:  BTFSS  03.0
001B:  GOTO   028
001C:  MOVLW  22
001D:  MOVWF  04
001E:  BCF    03.7
001F:  BCF    03.0
0020:  RRF    00,F
0021:  MOVF   00,W
0022:  BTFSC  03.2
0023:  GOTO   028
0024:  GOTO   026
0025:  NOP
0026:  DECFSZ 00,F
0027:  GOTO   025
0028:  RETURN
.................... #fuses HS, NOLVP, NOWDT 
....................  
.................... #define b pin_B2 
.................... #define h pin_B3 
.................... #define c pin_B4 
.................... #define m pin_B5 
.................... #define g pin_B6 
....................  
.................... int i; 
....................  
.................... void main(){ 
0029:  MOVF   03,W
002A:  ANDLW  1F
002B:  MOVWF  03
002C:  BSF    03.5
002D:  BSF    1F.0
002E:  BSF    1F.1
002F:  BSF    1F.2
0030:  BCF    1F.3
0031:  MOVLW  07
0032:  MOVWF  1C
0033:  BCF    03.7
....................    for(i=0;i<=50;i++){  //Alinea 
0034:  BCF    03.5
0035:  CLRF   20
0036:  MOVF   20,W
0037:  SUBLW  32
0038:  BTFSS  03.0
0039:  GOTO   093
....................      output_high(b); 
003A:  BSF    03.5
003B:  BCF    06.2
003C:  BCF    03.5
003D:  BSF    06.2
....................      delay_us(2600); 
003E:  MOVLW  02
003F:  MOVWF  21
0040:  CALL   004
0041:  MOVLW  03
0042:  MOVWF  21
0043:  MOVLW  C6
0044:  MOVWF  22
0045:  CALL   018
0046:  DECFSZ 21,F
0047:  GOTO   043
....................      output_low(b); 
0048:  BSF    03.5
0049:  BCF    06.2
004A:  BCF    03.5
004B:  BCF    06.2
....................      output_high(h); 
004C:  BSF    03.5
004D:  BCF    06.3
004E:  BCF    03.5
004F:  BSF    06.3
....................      delay_us(600); 
0050:  MOVLW  03
0051:  MOVWF  21
0052:  MOVLW  C6
0053:  MOVWF  22
0054:  CALL   018
0055:  DECFSZ 21,F
0056:  GOTO   052
....................      output_low(h); 
0057:  BSF    03.5
0058:  BCF    06.3
0059:  BCF    03.5
005A:  BCF    06.3
....................      output_high(c); 
005B:  BSF    03.5
005C:  BCF    06.4
005D:  BCF    03.5
005E:  BSF    06.4
....................      delay_us(712); 
005F:  MOVLW  04
0060:  MOVWF  21
0061:  MOVLW  B0
0062:  MOVWF  22
0063:  CALL   018
0064:  DECFSZ 21,F
0065:  GOTO   061
....................      output_low(c); 
0066:  BSF    03.5
0067:  BCF    06.4
0068:  BCF    03.5
0069:  BCF    06.4
....................      output_high(m); 
006A:  BSF    03.5
006B:  BCF    06.5
006C:  BCF    03.5
006D:  BSF    06.5
....................      delay_us(1600); 
006E:  MOVLW  01
006F:  MOVWF  21
0070:  CALL   004
0071:  MOVLW  03
0072:  MOVWF  21
0073:  MOVLW  C6
0074:  MOVWF  22
0075:  CALL   018
0076:  DECFSZ 21,F
0077:  GOTO   073
....................      output_low(m); 
0078:  BSF    03.5
0079:  BCF    06.5
007A:  BCF    03.5
007B:  BCF    06.5
....................      output_high(g); 
007C:  BSF    03.5
007D:  BCF    06.6
007E:  BCF    03.5
007F:  BSF    06.6
....................      delay_us(1600); 
0080:  MOVLW  01
0081:  MOVWF  21
0082:  CALL   004
0083:  MOVLW  03
0084:  MOVWF  21
0085:  MOVLW  C6
0086:  MOVWF  22
0087:  CALL   018
0088:  DECFSZ 21,F
0089:  GOTO   085
....................      output_low(g); 
008A:  BSF    03.5
008B:  BCF    06.6
008C:  BCF    03.5
008D:  BCF    06.6
....................      delay_us(19000); 
008E:  MOVLW  13
008F:  MOVWF  21
0090:  CALL   004
0091:  INCF   20,F
0092:  GOTO   036
....................    } 
....................     
....................    for(i=0;i<=25;i++){  //Cierra garra 
0093:  CLRF   20
0094:  MOVF   20,W
0095:  SUBLW  19
0096:  BTFSS  03.0
0097:  GOTO   0EE
....................      output_high(b); 
0098:  BSF    03.5
0099:  BCF    06.2
009A:  BCF    03.5
009B:  BSF    06.2
....................      delay_us(2600); 
009C:  MOVLW  02
009D:  MOVWF  21
009E:  CALL   004
009F:  MOVLW  03
00A0:  MOVWF  21
00A1:  MOVLW  C6
00A2:  MOVWF  22
00A3:  CALL   018
00A4:  DECFSZ 21,F
00A5:  GOTO   0A1
....................      output_low(b); 
00A6:  BSF    03.5
00A7:  BCF    06.2
00A8:  BCF    03.5
00A9:  BCF    06.2
....................      output_high(h); 
00AA:  BSF    03.5
00AB:  BCF    06.3
00AC:  BCF    03.5
00AD:  BSF    06.3
....................      delay_us(600); 
00AE:  MOVLW  03
00AF:  MOVWF  21
00B0:  MOVLW  C6
00B1:  MOVWF  22
00B2:  CALL   018
00B3:  DECFSZ 21,F
00B4:  GOTO   0B0
....................      output_low(h); 
00B5:  BSF    03.5
00B6:  BCF    06.3
00B7:  BCF    03.5
00B8:  BCF    06.3
....................      output_high(c); 
00B9:  BSF    03.5
00BA:  BCF    06.4
00BB:  BCF    03.5
00BC:  BSF    06.4
....................      delay_us(600); 
00BD:  MOVLW  03
00BE:  MOVWF  21
00BF:  MOVLW  C6
00C0:  MOVWF  22
00C1:  CALL   018
00C2:  DECFSZ 21,F
00C3:  GOTO   0BF
....................      output_low(c); 
00C4:  BSF    03.5
00C5:  BCF    06.4
00C6:  BCF    03.5
00C7:  BCF    06.4
....................      output_high(m); 
00C8:  BSF    03.5
00C9:  BCF    06.5
00CA:  BCF    03.5
00CB:  BSF    06.5
....................      delay_us(1600); 
00CC:  MOVLW  01
00CD:  MOVWF  21
00CE:  CALL   004
00CF:  MOVLW  03
00D0:  MOVWF  21
00D1:  MOVLW  C6
00D2:  MOVWF  22
00D3:  CALL   018
00D4:  DECFSZ 21,F
00D5:  GOTO   0D1
....................      output_low(m); 
00D6:  BSF    03.5
00D7:  BCF    06.5
00D8:  BCF    03.5
00D9:  BCF    06.5
....................      output_high(g); 
00DA:  BSF    03.5
00DB:  BCF    06.6
00DC:  BCF    03.5
00DD:  BSF    06.6
....................      delay_us(900); 
00DE:  MOVLW  04
00DF:  MOVWF  21
00E0:  MOVLW  DF
00E1:  MOVWF  22
00E2:  CALL   018
00E3:  DECFSZ 21,F
00E4:  GOTO   0E0
....................      output_low(g); 
00E5:  BSF    03.5
00E6:  BCF    06.6
00E7:  BCF    03.5
00E8:  BCF    06.6
....................      delay_us(19000); 
00E9:  MOVLW  13
00EA:  MOVWF  21
00EB:  CALL   004
00EC:  INCF   20,F
00ED:  GOTO   094
....................    } 
....................     
....................    for(i=0;i<=50;i++){  //Desplaza 
00EE:  CLRF   20
00EF:  MOVF   20,W
00F0:  SUBLW  32
00F1:  BTFSS  03.0
00F2:  GOTO   14B
....................      output_high(b); 
00F3:  BSF    03.5
00F4:  BCF    06.2
00F5:  BCF    03.5
00F6:  BSF    06.2
....................      delay_us(2266); 
00F7:  MOVLW  02
00F8:  MOVWF  21
00F9:  CALL   004
00FA:  MOVLW  02
00FB:  MOVWF  21
00FC:  MOVLW  83
00FD:  MOVWF  22
00FE:  CALL   018
00FF:  DECFSZ 21,F
0100:  GOTO   0FC
....................      output_low(b); 
0101:  BSF    03.5
0102:  BCF    06.2
0103:  BCF    03.5
0104:  BCF    06.2
....................      output_high(h); 
0105:  BSF    03.5
0106:  BCF    06.3
0107:  BCF    03.5
0108:  BSF    06.3
....................      delay_us(1100); 
0109:  MOVLW  01
010A:  MOVWF  21
010B:  CALL   004
010C:  MOVLW  64
010D:  MOVWF  22
010E:  CALL   018
....................      output_low(h); 
010F:  BSF    03.5
0110:  BCF    06.3
0111:  BCF    03.5
0112:  BCF    06.3
....................      output_high(c); 
0113:  BSF    03.5
0114:  BCF    06.4
0115:  BCF    03.5
0116:  BSF    06.4
....................      delay_us(2600); 
0117:  MOVLW  02
0118:  MOVWF  21
0119:  CALL   004
011A:  MOVLW  03
011B:  MOVWF  21
011C:  MOVLW  C6
011D:  MOVWF  22
011E:  CALL   018
011F:  DECFSZ 21,F
0120:  GOTO   11C
....................      output_low(c); 
0121:  BSF    03.5
0122:  BCF    06.4
0123:  BCF    03.5
0124:  BCF    06.4
....................      output_high(m); 
0125:  BSF    03.5
0126:  BCF    06.5
0127:  BCF    03.5
0128:  BSF    06.5
....................      delay_us(1600); 
0129:  MOVLW  01
012A:  MOVWF  21
012B:  CALL   004
012C:  MOVLW  03
012D:  MOVWF  21
012E:  MOVLW  C6
012F:  MOVWF  22
0130:  CALL   018
0131:  DECFSZ 21,F
0132:  GOTO   12E
....................      output_low(m); 
0133:  BSF    03.5
0134:  BCF    06.5
0135:  BCF    03.5
0136:  BCF    06.5
....................      output_high(g); 
0137:  BSF    03.5
0138:  BCF    06.6
0139:  BCF    03.5
013A:  BSF    06.6
....................      delay_us(900); 
013B:  MOVLW  04
013C:  MOVWF  21
013D:  MOVLW  DF
013E:  MOVWF  22
013F:  CALL   018
0140:  DECFSZ 21,F
0141:  GOTO   13D
....................      output_low(g); 
0142:  BSF    03.5
0143:  BCF    06.6
0144:  BCF    03.5
0145:  BCF    06.6
....................      delay_us(19000); 
0146:  MOVLW  13
0147:  MOVWF  21
0148:  CALL   004
0149:  INCF   20,F
014A:  GOTO   0EF
....................    } 
....................     
....................    for(i=0;i<=25;i++){  //Abre garra 
014B:  CLRF   20
014C:  MOVF   20,W
014D:  SUBLW  19
014E:  BTFSS  03.0
014F:  GOTO   1A7
....................      delay_us(2266); 
0150:  MOVLW  02
0151:  MOVWF  21
0152:  CALL   004
0153:  MOVLW  02
0154:  MOVWF  21
0155:  MOVLW  83
0156:  MOVWF  22
0157:  CALL   018
0158:  DECFSZ 21,F
0159:  GOTO   155
....................      output_low(b); 
015A:  BSF    03.5
015B:  BCF    06.2
015C:  BCF    03.5
015D:  BCF    06.2
....................      output_high(h); 
015E:  BSF    03.5
015F:  BCF    06.3
0160:  BCF    03.5
0161:  BSF    06.3
....................      delay_us(1100); 
0162:  MOVLW  01
0163:  MOVWF  21
0164:  CALL   004
0165:  MOVLW  64
0166:  MOVWF  22
0167:  CALL   018
....................      output_low(h); 
0168:  BSF    03.5
0169:  BCF    06.3
016A:  BCF    03.5
016B:  BCF    06.3
....................      output_high(c); 
016C:  BSF    03.5
016D:  BCF    06.4
016E:  BCF    03.5
016F:  BSF    06.4
....................      delay_us(2600); 
0170:  MOVLW  02
0171:  MOVWF  21
0172:  CALL   004
0173:  MOVLW  03
0174:  MOVWF  21
0175:  MOVLW  C6
0176:  MOVWF  22
0177:  CALL   018
0178:  DECFSZ 21,F
0179:  GOTO   175
....................      output_low(c); 
017A:  BSF    03.5
017B:  BCF    06.4
017C:  BCF    03.5
017D:  BCF    06.4
....................      output_high(m); 
017E:  BSF    03.5
017F:  BCF    06.5
0180:  BCF    03.5
0181:  BSF    06.5
....................      delay_us(1600); 
0182:  MOVLW  01
0183:  MOVWF  21
0184:  CALL   004
0185:  MOVLW  03
0186:  MOVWF  21
0187:  MOVLW  C6
0188:  MOVWF  22
0189:  CALL   018
018A:  DECFSZ 21,F
018B:  GOTO   187
....................      output_low(m); 
018C:  BSF    03.5
018D:  BCF    06.5
018E:  BCF    03.5
018F:  BCF    06.5
....................      output_high(g); 
0190:  BSF    03.5
0191:  BCF    06.6
0192:  BCF    03.5
0193:  BSF    06.6
....................      delay_us(1600); 
0194:  MOVLW  01
0195:  MOVWF  21
0196:  CALL   004
0197:  MOVLW  03
0198:  MOVWF  21
0199:  MOVLW  C6
019A:  MOVWF  22
019B:  CALL   018
019C:  DECFSZ 21,F
019D:  GOTO   199
....................      output_low(g); 
019E:  BSF    03.5
019F:  BCF    06.6
01A0:  BCF    03.5
01A1:  BCF    06.6
....................      delay_us(19000); 
01A2:  MOVLW  13
01A3:  MOVWF  21
01A4:  CALL   004
01A5:  INCF   20,F
01A6:  GOTO   14C
....................    } 
....................     
....................    for(i=0;i<=50;i++){  //Home 
01A7:  CLRF   20
01A8:  MOVF   20,W
01A9:  SUBLW  32
01AA:  BTFSS  03.0
01AB:  GOTO   1FD
....................      output_high(b); 
01AC:  BSF    03.5
01AD:  BCF    06.2
01AE:  BCF    03.5
01AF:  BSF    06.2
....................      delay_us(2600); 
01B0:  MOVLW  02
01B1:  MOVWF  21
01B2:  CALL   004
01B3:  MOVLW  03
01B4:  MOVWF  21
01B5:  MOVLW  C6
01B6:  MOVWF  22
01B7:  CALL   018
01B8:  DECFSZ 21,F
01B9:  GOTO   1B5
....................      output_low(b); 
01BA:  BSF    03.5
01BB:  BCF    06.2
01BC:  BCF    03.5
01BD:  BCF    06.2
....................      output_high(h); 
01BE:  BSF    03.5
01BF:  BCF    06.3
01C0:  BCF    03.5
01C1:  BSF    06.3
....................      delay_us(2000); 
01C2:  MOVLW  02
01C3:  MOVWF  21
01C4:  CALL   004
....................      output_low(h); 
01C5:  BSF    03.5
01C6:  BCF    06.3
01C7:  BCF    03.5
01C8:  BCF    06.3
....................      output_high(c); 
01C9:  BSF    03.5
01CA:  BCF    06.4
01CB:  BCF    03.5
01CC:  BSF    06.4
....................      delay_us(500); 
01CD:  MOVLW  02
01CE:  MOVWF  21
01CF:  MOVLW  F8
01D0:  MOVWF  22
01D1:  CALL   018
01D2:  DECFSZ 21,F
01D3:  GOTO   1CF
....................      output_low(c); 
01D4:  BSF    03.5
01D5:  BCF    06.4
01D6:  BCF    03.5
01D7:  BCF    06.4
....................      output_high(m); 
01D8:  BSF    03.5
01D9:  BCF    06.5
01DA:  BCF    03.5
01DB:  BSF    06.5
....................      delay_us(1600); 
01DC:  MOVLW  01
01DD:  MOVWF  21
01DE:  CALL   004
01DF:  MOVLW  03
01E0:  MOVWF  21
01E1:  MOVLW  C6
01E2:  MOVWF  22
01E3:  CALL   018
01E4:  DECFSZ 21,F
01E5:  GOTO   1E1
....................      output_low(m); 
01E6:  BSF    03.5
01E7:  BCF    06.5
01E8:  BCF    03.5
01E9:  BCF    06.5
....................      output_high(g); 
01EA:  BSF    03.5
01EB:  BCF    06.6
01EC:  BCF    03.5
01ED:  BSF    06.6
....................      delay_us(1100); 
01EE:  MOVLW  01
01EF:  MOVWF  21
01F0:  CALL   004
01F1:  MOVLW  64
01F2:  MOVWF  22
01F3:  CALL   018
....................      output_low(g); 
01F4:  BSF    03.5
01F5:  BCF    06.6
01F6:  BCF    03.5
01F7:  BCF    06.6
....................      delay_us(19000); 
01F8:  MOVLW  13
01F9:  MOVWF  21
01FA:  CALL   004
01FB:  INCF   20,F
01FC:  GOTO   1A8
....................    } 
.................... } 
01FD:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
