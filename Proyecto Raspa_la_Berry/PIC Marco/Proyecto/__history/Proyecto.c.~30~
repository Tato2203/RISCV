#include<16F877a.h>
#use delay(clock=8M)
#fuses NOLVP,NOWDT,HS

#use standard_io(B)
#use standard_io(C)
#use standard_io(D)

#define trig pin_B0
#define echo pin_B1

#define b pin_B2
#define h pin_B3
#define c pin_B4
#define m pin_B5
#define g pin_B6

#define m1f pin_D2
#define m1b pin_D3
#define m2b pin_C4
#define m2f pin_C5

#define obj pin_D5

float t, d;
int i;

void dist(){
   setup_timer_1(T1_INTERNAL|T1_DIV_BY_1);
   while(true){
      output_high(trig);
      delay_us(10);
      output_low(trig);
      while(!input(echo))
      {}
      set_timer1(0);
      while(input(echo))
      {}
      t=get_timer1();
      d=(t/2)/(29.15);
   }
}

void home(){
   for(i=0;i<=50;i++){
     output_high(b);
     delay_us(2600);
     output_low(b);
     output_high(h);
     delay_us(2000);
     output_low(h);
     output_high(c);
     delay_us(500);
     output_low(c);
     output_high(m);
     delay_us(1600);
     output_low(m);
     output_high(g);
     delay_us(1100);
     output_low(g);
     delay_us(19000);
   }
}

void go_forward(){
   output_high(m1f);
   output_high(m2f);
   output_low(m1b);
   output_low(m2b);
}

void stop(){
   output_low(m1f);
   output_low(m1b);
   output_low(m2f);
   output_low(m2b);

}

void go_backward(){
   output_high(m1b);
   output_high(m2b);
   output_low(m1f);
   output_low(m2f);

}

void turn(){
   output_high(m1f);
   output_high(m2f);
   output_low(m1b);
   output_low(m2b);
   delay_ms(2000);
}

void take(){
   for(i=0;i<=50;i++){  //Alinea
     output_high(b);
     delay_us(2600);
     output_low(b);
     output_high(h);
     delay_us(600);
     output_low(h);
     output_high(c);
     delay_us(712);
     output_low(c);
     output_high(m);
     delay_us(1600);
     output_low(m);
     output_high(g);
     delay_us(1600);
     output_low(g);
     delay_us(19000);
   }
   
   for(i=0;i<=25;i++){  //Cierra garra
     output_high(b);
     delay_us(2600);
     output_low(b);
     output_high(h);
     delay_us(600);
     output_low(h);
     output_high(c);
     delay_us(600);
     output_low(c);
     output_high(m);
     delay_us(1600);
     output_low(m);
     output_high(g);
     delay_us(900);
     output_low(g);
     delay_us(19000);
   }
   
   for(i=0;i<=50;i++){  //Desplaza
     output_high(b);
     delay_us(2266);
     output_low(b);
     output_high(h);
     delay_us(1100);
     output_low(h);
     output_high(c);
     delay_us(2600);
     output_low(c);
     output_high(m);
     delay_us(1600);
     output_low(m);
     output_high(g);
     delay_us(900);
     output_low(g);
     delay_us(19000);
   }
   
   for(i=0;i<=25;i++){  //Abre garra
     delay_us(2266);
     output_low(b);
     output_high(h);
     delay_us(1100);
     output_low(h);
     output_high(c);
     delay_us(2600);
     output_low(c);
     output_high(m);
     delay_us(1600);
     output_low(m);
     output_high(g);
     delay_us(1600);
     output_low(g);
     delay_us(19000);
   }
   
   for(i=0;i<=50;i++){  //Home
     output_high(b);
     delay_us(2600);
     output_low(b);
     output_high(h);
     delay_us(2000);
     output_low(h);
     output_high(c);
     delay_us(500);
     output_low(c);
     output_high(m);
     delay_us(1600);
     output_low(m);
     output_high(g);
     delay_us(1100);
     output_low(g);
     delay_us(19000);
   }

}

void main(){
   while(true){
      home();
      dist();
      go_forward();
      if (d<=15){
         stop();
         turn();
         stop();
         go_forward();
      }      
      if(input(obj)==TRUE){
         stop();
         go_backward();
         delay_ms(1200);
         stop();
         take();
         go_forward();
      }     
   }
}
