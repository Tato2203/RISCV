CCS PCM C Compiler, Version 5.059, 5967               22-ago.-18 02:23

               Filename:   C:\Users\¡¡¡VIVA EL BASKET!!!\Desktop\Progra\PIC\Proyecto\Proyecto.lst

               ROM used:   901 words (11%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   029
0003:  NOP
.................... #include<16F877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #use delay(clock=8M) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  02
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  97
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETURN
0018:  MOVLW  08
0019:  SUBWF  22,F
001A:  BTFSS  03.0
001B:  GOTO   028
001C:  MOVLW  22
001D:  MOVWF  04
001E:  BCF    03.7
001F:  BCF    03.0
0020:  RRF    00,F
0021:  MOVF   00,W
0022:  BTFSC  03.2
0023:  GOTO   028
0024:  GOTO   026
0025:  NOP
0026:  DECFSZ 00,F
0027:  GOTO   025
0028:  RETURN
.................... #fuses NOLVP,NOWDT,HS 
....................  
.................... //#define trig pin_B0 
....................  
.................... #define b pin_B2 
.................... #define h pin_B3 
.................... #define c pin_B4 
.................... #define m pin_B5 
.................... #define g pin_B6 
....................  
.................... #define m1f pin_D2 
.................... #define m1b pin_D3 
.................... #define m2b pin_D1 
.................... #define m2f pin_D0 
....................  
.................... #define obj pin_A0 
.................... #define wall pin_A1 
....................  
.................... //float t, d; 
.................... int i; 
....................  
.................... /*void dist(){ 
....................       setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
....................       output_high(trig); 
....................       delay_us(10); 
....................       output_low(trig); 
....................       while(!input(echo)) 
....................       {} 
....................       set_timer1(0); 
....................       while(input(echo)) 
....................       {} 
....................       t=get_timer1(); 
....................       d=(t/2)/(29.15); 
.................... } 
....................  
.................... void home(){ 
....................    for(i=0;i<=50;i++){ 
....................      output_high(b); 
....................      delay_us(2600); 
....................      output_low(b); 
....................      output_high(h); 
....................      delay_us(2000); 
....................      output_low(h); 
....................      output_high(c); 
....................      delay_us(500); 
....................      output_low(c); 
....................      output_high(m); 
....................      delay_us(1600); 
....................      output_low(m); 
....................      output_high(g); 
....................      delay_us(1100); 
....................      output_low(g); 
....................      delay_us(19000); 
....................    } 
.................... } 
....................  
.................... void go_backward(){ 
....................    output_low(m1f); 
....................    output_low(m2f); 
....................    output_high(m1b); 
....................    output_high(m2b); 
.................... } 
....................  
.................... void stop(){ 
....................    output_high(m1f); 
....................    output_high(m1b); 
....................    output_high(m2f); 
....................    output_high(m2b); 
....................    delay_ms(1500); 
....................  
.................... } 
....................  
.................... void go_forward(){ 
....................    output_high(m1f); 
....................    output_high(m2f); 
....................    output_low(m1b); 
....................    output_low(m2b); 
....................  
.................... } 
....................  
.................... void turn(){ 
....................    output_high(m1b); 
....................    output_high(m2f); 
....................    output_low(m1f); 
....................    output_low(m2b); 
....................    delay_ms(2000); 
.................... } 
.................... void take(){ 
....................    for(i=0;i<=50;i++){  //Alinea 
....................      output_high(b); 
....................      delay_us(2600); 
....................      output_low(b); 
....................      output_high(h); 
....................      delay_us(600); 
....................      output_low(h); 
....................      output_high(c); 
....................      delay_us(712); 
....................      output_low(c); 
....................      output_high(m); 
....................      delay_us(1600); 
....................      output_low(m); 
....................      output_high(g); 
....................      delay_us(1600); 
....................      output_low(g); 
....................      delay_us(19000); 
....................    } 
....................     
....................    for(i=0;i<=25;i++){  //Cierra garra 
....................      output_high(b); 
....................      delay_us(2600); 
....................      output_low(b); 
....................      output_high(h); 
....................      delay_us(600); 
....................      output_low(h); 
....................      output_high(c); 
....................      delay_us(600); 
....................      output_low(c); 
....................      output_high(m); 
....................      delay_us(1600); 
....................      output_low(m); 
....................      output_high(g); 
....................      delay_us(900); 
....................      output_low(g); 
....................      delay_us(19000); 
....................    } 
....................     
....................    for(i=0;i<=50;i++){  //Desplaza 
....................      output_high(b); 
....................      delay_us(2266); 
....................      output_low(b); 
....................      output_high(h); 
....................      delay_us(1100); 
....................      output_low(h); 
....................      output_high(c); 
....................      delay_us(2600); 
....................      output_low(c); 
....................      output_high(m); 
....................      delay_us(1600); 
....................      output_low(m); 
....................      output_high(g); 
....................      delay_us(900); 
....................      output_low(g); 
....................      delay_us(19000); 
....................    } 
....................     
....................    for(i=0;i<=25;i++){  //Abre garra 
....................      delay_us(2266); 
....................      output_low(b); 
....................      output_high(h); 
....................      delay_us(1100); 
....................      output_low(h); 
....................      output_high(c); 
....................      delay_us(2600); 
....................      output_low(c); 
....................      output_high(m); 
....................      delay_us(1600); 
....................      output_low(m); 
....................      output_high(g); 
....................      delay_us(1600); 
....................      output_low(g); 
....................      delay_us(19000); 
....................    } 
....................     
....................    for(i=0;i<=50;i++){  //Home 
....................      output_high(b); 
....................      delay_us(2600); 
....................      output_low(b); 
....................      output_high(h); 
....................      delay_us(2000); 
....................      output_low(h); 
....................      output_high(c); 
....................      delay_us(500); 
....................      output_low(c); 
....................      output_high(m); 
....................      delay_us(1600); 
....................      output_low(m); 
....................      output_high(g); 
....................      delay_us(1100); 
....................      output_low(g); 
....................      delay_us(19000); 
....................    } 
....................  
.................... }*/ 
....................  
.................... void main(){ 
0029:  MOVF   03,W
002A:  ANDLW  1F
002B:  MOVWF  03
002C:  BSF    03.5
002D:  BSF    1F.0
002E:  BSF    1F.1
002F:  BSF    1F.2
0030:  BCF    1F.3
0031:  MOVLW  07
0032:  MOVWF  1C
0033:  BCF    03.7
....................    while(true){ 
....................       for(i=0;i<=5;i++){  //Home 
0034:  BCF    03.5
0035:  CLRF   20
0036:  MOVF   20,W
0037:  SUBLW  05
0038:  BTFSS  03.0
0039:  GOTO   08B
....................      output_high(b); 
003A:  BSF    03.5
003B:  BCF    06.2
003C:  BCF    03.5
003D:  BSF    06.2
....................      delay_us(2600); 
003E:  MOVLW  02
003F:  MOVWF  22
0040:  CALL   004
0041:  MOVLW  03
0042:  MOVWF  21
0043:  MOVLW  C6
0044:  MOVWF  22
0045:  CALL   018
0046:  DECFSZ 21,F
0047:  GOTO   043
....................      output_low(b); 
0048:  BSF    03.5
0049:  BCF    06.2
004A:  BCF    03.5
004B:  BCF    06.2
....................      output_high(h); 
004C:  BSF    03.5
004D:  BCF    06.3
004E:  BCF    03.5
004F:  BSF    06.3
....................      delay_us(2000); 
0050:  MOVLW  02
0051:  MOVWF  22
0052:  CALL   004
....................      output_low(h); 
0053:  BSF    03.5
0054:  BCF    06.3
0055:  BCF    03.5
0056:  BCF    06.3
....................      output_high(c); 
0057:  BSF    03.5
0058:  BCF    06.4
0059:  BCF    03.5
005A:  BSF    06.4
....................      delay_us(500); 
005B:  MOVLW  02
005C:  MOVWF  21
005D:  MOVLW  F8
005E:  MOVWF  22
005F:  CALL   018
0060:  DECFSZ 21,F
0061:  GOTO   05D
....................      output_low(c); 
0062:  BSF    03.5
0063:  BCF    06.4
0064:  BCF    03.5
0065:  BCF    06.4
....................      output_high(m); 
0066:  BSF    03.5
0067:  BCF    06.5
0068:  BCF    03.5
0069:  BSF    06.5
....................      delay_us(1600); 
006A:  MOVLW  01
006B:  MOVWF  22
006C:  CALL   004
006D:  MOVLW  03
006E:  MOVWF  21
006F:  MOVLW  C6
0070:  MOVWF  22
0071:  CALL   018
0072:  DECFSZ 21,F
0073:  GOTO   06F
....................      output_low(m); 
0074:  BSF    03.5
0075:  BCF    06.5
0076:  BCF    03.5
0077:  BCF    06.5
....................      output_high(g); 
0078:  BSF    03.5
0079:  BCF    06.6
007A:  BCF    03.5
007B:  BSF    06.6
....................      delay_us(1100); 
007C:  MOVLW  01
007D:  MOVWF  22
007E:  CALL   004
007F:  MOVLW  64
0080:  MOVWF  22
0081:  CALL   018
....................      output_low(g); 
0082:  BSF    03.5
0083:  BCF    06.6
0084:  BCF    03.5
0085:  BCF    06.6
....................      delay_us(19000); 
0086:  MOVLW  13
0087:  MOVWF  22
0088:  CALL   004
0089:  INCF   20,F
008A:  GOTO   036
....................    }      
....................      
....................       
....................       output_high(m1f); 
008B:  BSF    03.5
008C:  BCF    08.2
008D:  BCF    03.5
008E:  BSF    08.2
....................       output_high(m2f); 
008F:  BSF    03.5
0090:  BCF    08.0
0091:  BCF    03.5
0092:  BSF    08.0
....................       output_low(m1b); 
0093:  BSF    03.5
0094:  BCF    08.3
0095:  BCF    03.5
0096:  BCF    08.3
....................       output_low(m2b); 
0097:  BSF    03.5
0098:  BCF    08.1
0099:  BCF    03.5
009A:  BCF    08.1
....................        
....................      /*setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
....................       output_high(trig); 
....................       delay_us(10); 
....................       output_low(trig); 
....................       while(!input(echo)) 
....................       {} 
....................       set_timer1(0); 
....................       while(input(echo)) 
....................       {} 
....................       t=get_timer1(); 
....................       d=(t/2)/(29.15);*/ 
....................        
....................       if (/*input(obj)==TRUE &&*/ input(wall)==TRUE){ 
009B:  BSF    03.5
009C:  BSF    05.1
009D:  BCF    03.5
009E:  BTFSS  05.1
009F:  GOTO   10C
....................           
....................          output_high(m1f); 
00A0:  BSF    03.5
00A1:  BCF    08.2
00A2:  BCF    03.5
00A3:  BSF    08.2
....................          output_high(m1b); 
00A4:  BSF    03.5
00A5:  BCF    08.3
00A6:  BCF    03.5
00A7:  BSF    08.3
....................          output_high(m2f); 
00A8:  BSF    03.5
00A9:  BCF    08.0
00AA:  BCF    03.5
00AB:  BSF    08.0
....................          output_high(m2b); 
00AC:  BSF    03.5
00AD:  BCF    08.1
00AE:  BCF    03.5
00AF:  BSF    08.1
....................          delay_ms(500);  
00B0:  MOVLW  02
00B1:  MOVWF  21
00B2:  MOVLW  FA
00B3:  MOVWF  22
00B4:  CALL   004
00B5:  DECFSZ 21,F
00B6:  GOTO   0B2
....................           
....................          output_low(m1f); 
00B7:  BSF    03.5
00B8:  BCF    08.2
00B9:  BCF    03.5
00BA:  BCF    08.2
....................          output_low(m2f); 
00BB:  BSF    03.5
00BC:  BCF    08.0
00BD:  BCF    03.5
00BE:  BCF    08.0
....................          output_high(m1b); 
00BF:  BSF    03.5
00C0:  BCF    08.3
00C1:  BCF    03.5
00C2:  BSF    08.3
....................          output_high(m2b); 
00C3:  BSF    03.5
00C4:  BCF    08.1
00C5:  BCF    03.5
00C6:  BSF    08.1
....................          delay_ms(1000); 
00C7:  MOVLW  04
00C8:  MOVWF  21
00C9:  MOVLW  FA
00CA:  MOVWF  22
00CB:  CALL   004
00CC:  DECFSZ 21,F
00CD:  GOTO   0C9
....................           
....................          output_high(m1b); 
00CE:  BSF    03.5
00CF:  BCF    08.3
00D0:  BCF    03.5
00D1:  BSF    08.3
....................          output_high(m2f); 
00D2:  BSF    03.5
00D3:  BCF    08.0
00D4:  BCF    03.5
00D5:  BSF    08.0
....................          output_low(m1f); 
00D6:  BSF    03.5
00D7:  BCF    08.2
00D8:  BCF    03.5
00D9:  BCF    08.2
....................          output_low(m2b); 
00DA:  BSF    03.5
00DB:  BCF    08.1
00DC:  BCF    03.5
00DD:  BCF    08.1
....................          delay_ms(750); 
00DE:  MOVLW  03
00DF:  MOVWF  21
00E0:  MOVLW  FA
00E1:  MOVWF  22
00E2:  CALL   004
00E3:  DECFSZ 21,F
00E4:  GOTO   0E0
....................           
....................          output_high(m1f); 
00E5:  BSF    03.5
00E6:  BCF    08.2
00E7:  BCF    03.5
00E8:  BSF    08.2
....................          output_high(m1b); 
00E9:  BSF    03.5
00EA:  BCF    08.3
00EB:  BCF    03.5
00EC:  BSF    08.3
....................          output_high(m2f); 
00ED:  BSF    03.5
00EE:  BCF    08.0
00EF:  BCF    03.5
00F0:  BSF    08.0
....................          output_high(m2b); 
00F1:  BSF    03.5
00F2:  BCF    08.1
00F3:  BCF    03.5
00F4:  BSF    08.1
....................          delay_ms(500);  
00F5:  MOVLW  02
00F6:  MOVWF  21
00F7:  MOVLW  FA
00F8:  MOVWF  22
00F9:  CALL   004
00FA:  DECFSZ 21,F
00FB:  GOTO   0F7
....................           
....................          output_high(m1f); 
00FC:  BSF    03.5
00FD:  BCF    08.2
00FE:  BCF    03.5
00FF:  BSF    08.2
....................          output_high(m2f); 
0100:  BSF    03.5
0101:  BCF    08.0
0102:  BCF    03.5
0103:  BSF    08.0
....................          output_low(m1b); 
0104:  BSF    03.5
0105:  BCF    08.3
0106:  BCF    03.5
0107:  BCF    08.3
....................          output_low(m2b);      
0108:  BSF    03.5
0109:  BCF    08.1
010A:  BCF    03.5
010B:  BCF    08.1
....................       }  
....................      /* else{ 
....................          output_high(m1f); 
....................          output_high(m2f); 
....................          output_low(m1b); 
....................          output_low(m2b); 
....................       }*/ 
....................       if(input(obj)==TRUE){ 
010C:  BSF    03.5
010D:  BSF    05.0
010E:  BCF    03.5
010F:  BTFSS  05.0
0110:  GOTO   383
....................          output_high(m1f); 
0111:  BSF    03.5
0112:  BCF    08.2
0113:  BCF    03.5
0114:  BSF    08.2
....................          output_high(m1b); 
0115:  BSF    03.5
0116:  BCF    08.3
0117:  BCF    03.5
0118:  BSF    08.3
....................          output_high(m2f); 
0119:  BSF    03.5
011A:  BCF    08.0
011B:  BCF    03.5
011C:  BSF    08.0
....................          output_high(m2b); 
011D:  BSF    03.5
011E:  BCF    08.1
011F:  BCF    03.5
0120:  BSF    08.1
....................          delay_ms(500); 
0121:  MOVLW  02
0122:  MOVWF  21
0123:  MOVLW  FA
0124:  MOVWF  22
0125:  CALL   004
0126:  DECFSZ 21,F
0127:  GOTO   123
....................           
....................          output_low(m1f); 
0128:  BSF    03.5
0129:  BCF    08.2
012A:  BCF    03.5
012B:  BCF    08.2
....................          output_low(m2f); 
012C:  BSF    03.5
012D:  BCF    08.0
012E:  BCF    03.5
012F:  BCF    08.0
....................          output_high(m1b); 
0130:  BSF    03.5
0131:  BCF    08.3
0132:  BCF    03.5
0133:  BSF    08.3
....................          output_high(m2b);          
0134:  BSF    03.5
0135:  BCF    08.1
0136:  BCF    03.5
0137:  BSF    08.1
....................          delay_ms(250); 
0138:  MOVLW  FA
0139:  MOVWF  22
013A:  CALL   004
....................           
....................          output_high(m1f); 
013B:  BSF    03.5
013C:  BCF    08.2
013D:  BCF    03.5
013E:  BSF    08.2
....................          output_high(m1b); 
013F:  BSF    03.5
0140:  BCF    08.3
0141:  BCF    03.5
0142:  BSF    08.3
....................          output_high(m2f); 
0143:  BSF    03.5
0144:  BCF    08.0
0145:  BCF    03.5
0146:  BSF    08.0
....................          output_high(m2b); 
0147:  BSF    03.5
0148:  BCF    08.1
0149:  BCF    03.5
014A:  BSF    08.1
....................          delay_ms(500); 
014B:  MOVLW  02
014C:  MOVWF  21
014D:  MOVLW  FA
014E:  MOVWF  22
014F:  CALL   004
0150:  DECFSZ 21,F
0151:  GOTO   14D
....................  
....................          for(i=0;i<=50;i++){  //Alinea 
0152:  CLRF   20
0153:  MOVF   20,W
0154:  SUBLW  32
0155:  BTFSS  03.0
0156:  GOTO   1B0
....................      output_high(b); 
0157:  BSF    03.5
0158:  BCF    06.2
0159:  BCF    03.5
015A:  BSF    06.2
....................      delay_us(2600); 
015B:  MOVLW  02
015C:  MOVWF  22
015D:  CALL   004
015E:  MOVLW  03
015F:  MOVWF  21
0160:  MOVLW  C6
0161:  MOVWF  22
0162:  CALL   018
0163:  DECFSZ 21,F
0164:  GOTO   160
....................      output_low(b); 
0165:  BSF    03.5
0166:  BCF    06.2
0167:  BCF    03.5
0168:  BCF    06.2
....................      output_high(h); 
0169:  BSF    03.5
016A:  BCF    06.3
016B:  BCF    03.5
016C:  BSF    06.3
....................      delay_us(600); 
016D:  MOVLW  03
016E:  MOVWF  21
016F:  MOVLW  C6
0170:  MOVWF  22
0171:  CALL   018
0172:  DECFSZ 21,F
0173:  GOTO   16F
....................      output_low(h); 
0174:  BSF    03.5
0175:  BCF    06.3
0176:  BCF    03.5
0177:  BCF    06.3
....................      output_high(c); 
0178:  BSF    03.5
0179:  BCF    06.4
017A:  BCF    03.5
017B:  BSF    06.4
....................      delay_us(712); 
017C:  MOVLW  04
017D:  MOVWF  21
017E:  MOVLW  B0
017F:  MOVWF  22
0180:  CALL   018
0181:  DECFSZ 21,F
0182:  GOTO   17E
....................      output_low(c); 
0183:  BSF    03.5
0184:  BCF    06.4
0185:  BCF    03.5
0186:  BCF    06.4
....................      output_high(m); 
0187:  BSF    03.5
0188:  BCF    06.5
0189:  BCF    03.5
018A:  BSF    06.5
....................      delay_us(1600); 
018B:  MOVLW  01
018C:  MOVWF  22
018D:  CALL   004
018E:  MOVLW  03
018F:  MOVWF  21
0190:  MOVLW  C6
0191:  MOVWF  22
0192:  CALL   018
0193:  DECFSZ 21,F
0194:  GOTO   190
....................      output_low(m); 
0195:  BSF    03.5
0196:  BCF    06.5
0197:  BCF    03.5
0198:  BCF    06.5
....................      output_high(g); 
0199:  BSF    03.5
019A:  BCF    06.6
019B:  BCF    03.5
019C:  BSF    06.6
....................      delay_us(1600); 
019D:  MOVLW  01
019E:  MOVWF  22
019F:  CALL   004
01A0:  MOVLW  03
01A1:  MOVWF  21
01A2:  MOVLW  C6
01A3:  MOVWF  22
01A4:  CALL   018
01A5:  DECFSZ 21,F
01A6:  GOTO   1A2
....................      output_low(g); 
01A7:  BSF    03.5
01A8:  BCF    06.6
01A9:  BCF    03.5
01AA:  BCF    06.6
....................      delay_us(19000); 
01AB:  MOVLW  13
01AC:  MOVWF  22
01AD:  CALL   004
01AE:  INCF   20,F
01AF:  GOTO   153
....................    } 
....................     
....................    for(i=0;i<=25;i++){  //Cierra garra 
01B0:  CLRF   20
01B1:  MOVF   20,W
01B2:  SUBLW  19
01B3:  BTFSS  03.0
01B4:  GOTO   20B
....................      output_high(b); 
01B5:  BSF    03.5
01B6:  BCF    06.2
01B7:  BCF    03.5
01B8:  BSF    06.2
....................      delay_us(2600); 
01B9:  MOVLW  02
01BA:  MOVWF  22
01BB:  CALL   004
01BC:  MOVLW  03
01BD:  MOVWF  21
01BE:  MOVLW  C6
01BF:  MOVWF  22
01C0:  CALL   018
01C1:  DECFSZ 21,F
01C2:  GOTO   1BE
....................      output_low(b); 
01C3:  BSF    03.5
01C4:  BCF    06.2
01C5:  BCF    03.5
01C6:  BCF    06.2
....................      output_high(h); 
01C7:  BSF    03.5
01C8:  BCF    06.3
01C9:  BCF    03.5
01CA:  BSF    06.3
....................      delay_us(600); 
01CB:  MOVLW  03
01CC:  MOVWF  21
01CD:  MOVLW  C6
01CE:  MOVWF  22
01CF:  CALL   018
01D0:  DECFSZ 21,F
01D1:  GOTO   1CD
....................      output_low(h); 
01D2:  BSF    03.5
01D3:  BCF    06.3
01D4:  BCF    03.5
01D5:  BCF    06.3
....................      output_high(c); 
01D6:  BSF    03.5
01D7:  BCF    06.4
01D8:  BCF    03.5
01D9:  BSF    06.4
....................      delay_us(600); 
01DA:  MOVLW  03
01DB:  MOVWF  21
01DC:  MOVLW  C6
01DD:  MOVWF  22
01DE:  CALL   018
01DF:  DECFSZ 21,F
01E0:  GOTO   1DC
....................      output_low(c); 
01E1:  BSF    03.5
01E2:  BCF    06.4
01E3:  BCF    03.5
01E4:  BCF    06.4
....................      output_high(m); 
01E5:  BSF    03.5
01E6:  BCF    06.5
01E7:  BCF    03.5
01E8:  BSF    06.5
....................      delay_us(1600); 
01E9:  MOVLW  01
01EA:  MOVWF  22
01EB:  CALL   004
01EC:  MOVLW  03
01ED:  MOVWF  21
01EE:  MOVLW  C6
01EF:  MOVWF  22
01F0:  CALL   018
01F1:  DECFSZ 21,F
01F2:  GOTO   1EE
....................      output_low(m); 
01F3:  BSF    03.5
01F4:  BCF    06.5
01F5:  BCF    03.5
01F6:  BCF    06.5
....................      output_high(g); 
01F7:  BSF    03.5
01F8:  BCF    06.6
01F9:  BCF    03.5
01FA:  BSF    06.6
....................      delay_us(900); 
01FB:  MOVLW  04
01FC:  MOVWF  21
01FD:  MOVLW  DF
01FE:  MOVWF  22
01FF:  CALL   018
0200:  DECFSZ 21,F
0201:  GOTO   1FD
....................      output_low(g); 
0202:  BSF    03.5
0203:  BCF    06.6
0204:  BCF    03.5
0205:  BCF    06.6
....................      delay_us(19000); 
0206:  MOVLW  13
0207:  MOVWF  22
0208:  CALL   004
0209:  INCF   20,F
020A:  GOTO   1B1
....................    } 
....................     
....................    for(i=0;i<=100;i++){  //Desplaza 
020B:  CLRF   20
020C:  MOVF   20,W
020D:  SUBLW  64
020E:  BTFSS  03.0
020F:  GOTO   268
....................      output_high(b); 
0210:  BSF    03.5
0211:  BCF    06.2
0212:  BCF    03.5
0213:  BSF    06.2
....................      delay_us(2266); 
0214:  MOVLW  02
0215:  MOVWF  22
0216:  CALL   004
0217:  MOVLW  02
0218:  MOVWF  21
0219:  MOVLW  83
021A:  MOVWF  22
021B:  CALL   018
021C:  DECFSZ 21,F
021D:  GOTO   219
....................      output_low(b); 
021E:  BSF    03.5
021F:  BCF    06.2
0220:  BCF    03.5
0221:  BCF    06.2
....................      output_high(h); 
0222:  BSF    03.5
0223:  BCF    06.3
0224:  BCF    03.5
0225:  BSF    06.3
....................      delay_us(1100); 
0226:  MOVLW  01
0227:  MOVWF  22
0228:  CALL   004
0229:  MOVLW  64
022A:  MOVWF  22
022B:  CALL   018
....................      output_low(h); 
022C:  BSF    03.5
022D:  BCF    06.3
022E:  BCF    03.5
022F:  BCF    06.3
....................      output_high(c); 
0230:  BSF    03.5
0231:  BCF    06.4
0232:  BCF    03.5
0233:  BSF    06.4
....................      delay_us(2600); 
0234:  MOVLW  02
0235:  MOVWF  22
0236:  CALL   004
0237:  MOVLW  03
0238:  MOVWF  21
0239:  MOVLW  C6
023A:  MOVWF  22
023B:  CALL   018
023C:  DECFSZ 21,F
023D:  GOTO   239
....................      output_low(c); 
023E:  BSF    03.5
023F:  BCF    06.4
0240:  BCF    03.5
0241:  BCF    06.4
....................      output_high(m); 
0242:  BSF    03.5
0243:  BCF    06.5
0244:  BCF    03.5
0245:  BSF    06.5
....................      delay_us(1600); 
0246:  MOVLW  01
0247:  MOVWF  22
0248:  CALL   004
0249:  MOVLW  03
024A:  MOVWF  21
024B:  MOVLW  C6
024C:  MOVWF  22
024D:  CALL   018
024E:  DECFSZ 21,F
024F:  GOTO   24B
....................      output_low(m); 
0250:  BSF    03.5
0251:  BCF    06.5
0252:  BCF    03.5
0253:  BCF    06.5
....................      output_high(g); 
0254:  BSF    03.5
0255:  BCF    06.6
0256:  BCF    03.5
0257:  BSF    06.6
....................      delay_us(900); 
0258:  MOVLW  04
0259:  MOVWF  21
025A:  MOVLW  DF
025B:  MOVWF  22
025C:  CALL   018
025D:  DECFSZ 21,F
025E:  GOTO   25A
....................      output_low(g); 
025F:  BSF    03.5
0260:  BCF    06.6
0261:  BCF    03.5
0262:  BCF    06.6
....................      delay_us(19000); 
0263:  MOVLW  13
0264:  MOVWF  22
0265:  CALL   004
0266:  INCF   20,F
0267:  GOTO   20C
....................    } 
....................     
....................    for(i=0;i<=25;i++){  //Abre garra 
0268:  CLRF   20
0269:  MOVF   20,W
026A:  SUBLW  19
026B:  BTFSS  03.0
026C:  GOTO   2C4
....................      delay_us(2266); 
026D:  MOVLW  02
026E:  MOVWF  22
026F:  CALL   004
0270:  MOVLW  02
0271:  MOVWF  21
0272:  MOVLW  83
0273:  MOVWF  22
0274:  CALL   018
0275:  DECFSZ 21,F
0276:  GOTO   272
....................      output_low(b); 
0277:  BSF    03.5
0278:  BCF    06.2
0279:  BCF    03.5
027A:  BCF    06.2
....................      output_high(h); 
027B:  BSF    03.5
027C:  BCF    06.3
027D:  BCF    03.5
027E:  BSF    06.3
....................      delay_us(1100); 
027F:  MOVLW  01
0280:  MOVWF  22
0281:  CALL   004
0282:  MOVLW  64
0283:  MOVWF  22
0284:  CALL   018
....................      output_low(h); 
0285:  BSF    03.5
0286:  BCF    06.3
0287:  BCF    03.5
0288:  BCF    06.3
....................      output_high(c); 
0289:  BSF    03.5
028A:  BCF    06.4
028B:  BCF    03.5
028C:  BSF    06.4
....................      delay_us(2600); 
028D:  MOVLW  02
028E:  MOVWF  22
028F:  CALL   004
0290:  MOVLW  03
0291:  MOVWF  21
0292:  MOVLW  C6
0293:  MOVWF  22
0294:  CALL   018
0295:  DECFSZ 21,F
0296:  GOTO   292
....................      output_low(c); 
0297:  BSF    03.5
0298:  BCF    06.4
0299:  BCF    03.5
029A:  BCF    06.4
....................      output_high(m); 
029B:  BSF    03.5
029C:  BCF    06.5
029D:  BCF    03.5
029E:  BSF    06.5
....................      delay_us(1600); 
029F:  MOVLW  01
02A0:  MOVWF  22
02A1:  CALL   004
02A2:  MOVLW  03
02A3:  MOVWF  21
02A4:  MOVLW  C6
02A5:  MOVWF  22
02A6:  CALL   018
02A7:  DECFSZ 21,F
02A8:  GOTO   2A4
....................      output_low(m); 
02A9:  BSF    03.5
02AA:  BCF    06.5
02AB:  BCF    03.5
02AC:  BCF    06.5
....................      output_high(g); 
02AD:  BSF    03.5
02AE:  BCF    06.6
02AF:  BCF    03.5
02B0:  BSF    06.6
....................      delay_us(1600); 
02B1:  MOVLW  01
02B2:  MOVWF  22
02B3:  CALL   004
02B4:  MOVLW  03
02B5:  MOVWF  21
02B6:  MOVLW  C6
02B7:  MOVWF  22
02B8:  CALL   018
02B9:  DECFSZ 21,F
02BA:  GOTO   2B6
....................      output_low(g); 
02BB:  BSF    03.5
02BC:  BCF    06.6
02BD:  BCF    03.5
02BE:  BCF    06.6
....................      delay_us(19000); 
02BF:  MOVLW  13
02C0:  MOVWF  22
02C1:  CALL   004
02C2:  INCF   20,F
02C3:  GOTO   269
....................    } 
....................     
....................    for(i=0;i<=25;i++){  //Corre un poquito 
02C4:  CLRF   20
02C5:  MOVF   20,W
02C6:  SUBLW  19
02C7:  BTFSS  03.0
02C8:  GOTO   31D
....................      delay_us(2266); 
02C9:  MOVLW  02
02CA:  MOVWF  22
02CB:  CALL   004
02CC:  MOVLW  02
02CD:  MOVWF  21
02CE:  MOVLW  83
02CF:  MOVWF  22
02D0:  CALL   018
02D1:  DECFSZ 21,F
02D2:  GOTO   2CE
....................      output_low(b); 
02D3:  BSF    03.5
02D4:  BCF    06.2
02D5:  BCF    03.5
02D6:  BCF    06.2
....................      output_high(h); 
02D7:  BSF    03.5
02D8:  BCF    06.3
02D9:  BCF    03.5
02DA:  BSF    06.3
....................      delay_us(1100); 
02DB:  MOVLW  01
02DC:  MOVWF  22
02DD:  CALL   004
02DE:  MOVLW  64
02DF:  MOVWF  22
02E0:  CALL   018
....................      output_low(h); 
02E1:  BSF    03.5
02E2:  BCF    06.3
02E3:  BCF    03.5
02E4:  BCF    06.3
....................      output_high(c); 
02E5:  BSF    03.5
02E6:  BCF    06.4
02E7:  BCF    03.5
02E8:  BSF    06.4
....................      delay_us(500); 
02E9:  MOVLW  02
02EA:  MOVWF  21
02EB:  MOVLW  F8
02EC:  MOVWF  22
02ED:  CALL   018
02EE:  DECFSZ 21,F
02EF:  GOTO   2EB
....................      output_low(c); 
02F0:  BSF    03.5
02F1:  BCF    06.4
02F2:  BCF    03.5
02F3:  BCF    06.4
....................      output_high(m); 
02F4:  BSF    03.5
02F5:  BCF    06.5
02F6:  BCF    03.5
02F7:  BSF    06.5
....................      delay_us(1600); 
02F8:  MOVLW  01
02F9:  MOVWF  22
02FA:  CALL   004
02FB:  MOVLW  03
02FC:  MOVWF  21
02FD:  MOVLW  C6
02FE:  MOVWF  22
02FF:  CALL   018
0300:  DECFSZ 21,F
0301:  GOTO   2FD
....................      output_low(m); 
0302:  BSF    03.5
0303:  BCF    06.5
0304:  BCF    03.5
0305:  BCF    06.5
....................      output_high(g); 
0306:  BSF    03.5
0307:  BCF    06.6
0308:  BCF    03.5
0309:  BSF    06.6
....................      delay_us(1600); 
030A:  MOVLW  01
030B:  MOVWF  22
030C:  CALL   004
030D:  MOVLW  03
030E:  MOVWF  21
030F:  MOVLW  C6
0310:  MOVWF  22
0311:  CALL   018
0312:  DECFSZ 21,F
0313:  GOTO   30F
....................      output_low(g); 
0314:  BSF    03.5
0315:  BCF    06.6
0316:  BCF    03.5
0317:  BCF    06.6
....................      delay_us(19000); 
0318:  MOVLW  13
0319:  MOVWF  22
031A:  CALL   004
031B:  INCF   20,F
031C:  GOTO   2C5
....................    } 
....................     
....................    for(i=0;i<=70;i++){  //Home 
031D:  CLRF   20
031E:  MOVF   20,W
031F:  SUBLW  46
0320:  BTFSS  03.0
0321:  GOTO   373
....................      output_high(b); 
0322:  BSF    03.5
0323:  BCF    06.2
0324:  BCF    03.5
0325:  BSF    06.2
....................      delay_us(2600); 
0326:  MOVLW  02
0327:  MOVWF  22
0328:  CALL   004
0329:  MOVLW  03
032A:  MOVWF  21
032B:  MOVLW  C6
032C:  MOVWF  22
032D:  CALL   018
032E:  DECFSZ 21,F
032F:  GOTO   32B
....................      output_low(b); 
0330:  BSF    03.5
0331:  BCF    06.2
0332:  BCF    03.5
0333:  BCF    06.2
....................      output_high(h); 
0334:  BSF    03.5
0335:  BCF    06.3
0336:  BCF    03.5
0337:  BSF    06.3
....................      delay_us(2000); 
0338:  MOVLW  02
0339:  MOVWF  22
033A:  CALL   004
....................      output_low(h); 
033B:  BSF    03.5
033C:  BCF    06.3
033D:  BCF    03.5
033E:  BCF    06.3
....................      output_high(c); 
033F:  BSF    03.5
0340:  BCF    06.4
0341:  BCF    03.5
0342:  BSF    06.4
....................      delay_us(500); 
0343:  MOVLW  02
0344:  MOVWF  21
0345:  MOVLW  F8
0346:  MOVWF  22
0347:  CALL   018
0348:  DECFSZ 21,F
0349:  GOTO   345
....................      output_low(c); 
034A:  BSF    03.5
034B:  BCF    06.4
034C:  BCF    03.5
034D:  BCF    06.4
....................      output_high(m); 
034E:  BSF    03.5
034F:  BCF    06.5
0350:  BCF    03.5
0351:  BSF    06.5
....................      delay_us(1600); 
0352:  MOVLW  01
0353:  MOVWF  22
0354:  CALL   004
0355:  MOVLW  03
0356:  MOVWF  21
0357:  MOVLW  C6
0358:  MOVWF  22
0359:  CALL   018
035A:  DECFSZ 21,F
035B:  GOTO   357
....................      output_low(m); 
035C:  BSF    03.5
035D:  BCF    06.5
035E:  BCF    03.5
035F:  BCF    06.5
....................      output_high(g); 
0360:  BSF    03.5
0361:  BCF    06.6
0362:  BCF    03.5
0363:  BSF    06.6
....................      delay_us(1100); 
0364:  MOVLW  01
0365:  MOVWF  22
0366:  CALL   004
0367:  MOVLW  64
0368:  MOVWF  22
0369:  CALL   018
....................      output_low(g); 
036A:  BSF    03.5
036B:  BCF    06.6
036C:  BCF    03.5
036D:  BCF    06.6
....................      delay_us(19000); 
036E:  MOVLW  13
036F:  MOVWF  22
0370:  CALL   004
0371:  INCF   20,F
0372:  GOTO   31E
....................    } 
....................           
....................          output_high(m1f); 
0373:  BSF    03.5
0374:  BCF    08.2
0375:  BCF    03.5
0376:  BSF    08.2
....................          output_high(m2f); 
0377:  BSF    03.5
0378:  BCF    08.0
0379:  BCF    03.5
037A:  BSF    08.0
....................          output_low(m1b); 
037B:  BSF    03.5
037C:  BCF    08.3
037D:  BCF    03.5
037E:  BCF    08.3
....................          output_low(m2b); 
037F:  BSF    03.5
0380:  BCF    08.1
0381:  BCF    03.5
0382:  BCF    08.1
....................  
....................       }   
0383:  GOTO   035
....................      /* else{ 
....................         output_high(m1f); 
....................         output_high(m2f); 
....................         output_low(m1b); 
....................         output_low(m2b); 
....................  
....................       }*/ 
....................    } 
.................... } 
0384:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
