CCS PCM C Compiler, Version 5.059, 5967               30-jul.-18 10:13

               Filename:   C:\Users\¡¡¡VIVA EL BASKET!!!\Desktop\Progra\PIC\Sensor de distancia\Sensor de distancia.lst

               ROM used:   696 words (8%)
                           Largest free fragment is 2048
               RAM used:   17 (5%) at main() level
                           31 (8%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  01
0001:  MOVWF  0A
0002:  GOTO   12C
0003:  NOP
.................... #include<16F877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
0004:  MOVLW  8E
0005:  MOVWF  77
0006:  MOVF   29,W
0007:  MOVWF  78
0008:  MOVF   28,W
0009:  MOVWF  79
000A:  CLRF   7A
000B:  MOVF   78,F
000C:  BTFSS  03.2
000D:  GOTO   018
000E:  MOVF   79,W
000F:  MOVWF  78
0010:  CLRF   79
0011:  MOVLW  08
0012:  SUBWF  77,F
0013:  MOVF   78,F
0014:  BTFSS  03.2
0015:  GOTO   018
0016:  CLRF   77
0017:  GOTO   020
0018:  BCF    03.0
0019:  BTFSC  78.7
001A:  GOTO   01F
001B:  RLF    79,F
001C:  RLF    78,F
001D:  DECF   77,F
001E:  GOTO   018
001F:  BCF    78.7
0020:  BCF    0A.3
0021:  BCF    0A.4
0022:  GOTO   161 (RETURN)
0023:  MOVF   2C,W
0024:  BTFSC  03.2
0025:  GOTO   0E8
0026:  MOVWF  38
0027:  MOVF   30,W
0028:  BTFSC  03.2
0029:  GOTO   0E8
002A:  SUBWF  38,F
002B:  BTFSS  03.0
002C:  GOTO   032
002D:  MOVLW  7F
002E:  ADDWF  38,F
002F:  BTFSC  03.0
0030:  GOTO   0E8
0031:  GOTO   038
0032:  MOVLW  81
0033:  SUBWF  38,F
0034:  BTFSS  03.0
0035:  GOTO   0E8
0036:  BTFSC  03.2
0037:  GOTO   0E8
0038:  MOVF   38,W
0039:  MOVWF  77
003A:  CLRF   78
003B:  CLRF   79
003C:  CLRF   7A
003D:  CLRF   37
003E:  MOVF   2D,W
003F:  MOVWF  36
0040:  BSF    36.7
0041:  MOVF   2E,W
0042:  MOVWF  35
0043:  MOVF   2F,W
0044:  MOVWF  34
0045:  MOVLW  19
0046:  MOVWF  38
0047:  MOVF   33,W
0048:  SUBWF  34,F
0049:  BTFSC  03.0
004A:  GOTO   05B
004B:  MOVLW  01
004C:  SUBWF  35,F
004D:  BTFSC  03.0
004E:  GOTO   05B
004F:  SUBWF  36,F
0050:  BTFSC  03.0
0051:  GOTO   05B
0052:  SUBWF  37,F
0053:  BTFSC  03.0
0054:  GOTO   05B
0055:  INCF   37,F
0056:  INCF   36,F
0057:  INCF   35,F
0058:  MOVF   33,W
0059:  ADDWF  34,F
005A:  GOTO   08D
005B:  MOVF   32,W
005C:  SUBWF  35,F
005D:  BTFSC  03.0
005E:  GOTO   076
005F:  MOVLW  01
0060:  SUBWF  36,F
0061:  BTFSC  03.0
0062:  GOTO   076
0063:  SUBWF  37,F
0064:  BTFSC  03.0
0065:  GOTO   076
0066:  INCF   37,F
0067:  INCF   36,F
0068:  MOVF   32,W
0069:  ADDWF  35,F
006A:  MOVF   33,W
006B:  ADDWF  34,F
006C:  BTFSS  03.0
006D:  GOTO   08D
006E:  INCF   35,F
006F:  BTFSS  03.2
0070:  GOTO   08D
0071:  INCF   36,F
0072:  BTFSS  03.2
0073:  GOTO   08D
0074:  INCF   37,F
0075:  GOTO   08D
0076:  MOVF   31,W
0077:  IORLW  80
0078:  SUBWF  36,F
0079:  BTFSC  03.0
007A:  GOTO   08C
007B:  MOVLW  01
007C:  SUBWF  37,F
007D:  BTFSC  03.0
007E:  GOTO   08C
007F:  INCF   37,F
0080:  MOVF   31,W
0081:  IORLW  80
0082:  ADDWF  36,F
0083:  MOVF   32,W
0084:  ADDWF  35,F
0085:  BTFSS  03.0
0086:  GOTO   06A
0087:  INCF   36,F
0088:  BTFSS  03.2
0089:  GOTO   06A
008A:  INCF   37,F
008B:  GOTO   06A
008C:  BSF    7A.0
008D:  DECFSZ 38,F
008E:  GOTO   090
008F:  GOTO   09B
0090:  BCF    03.0
0091:  RLF    34,F
0092:  RLF    35,F
0093:  RLF    36,F
0094:  RLF    37,F
0095:  BCF    03.0
0096:  RLF    7A,F
0097:  RLF    79,F
0098:  RLF    78,F
0099:  RLF    39,F
009A:  GOTO   047
009B:  BTFSS  39.0
009C:  GOTO   0A3
009D:  BCF    03.0
009E:  RRF    78,F
009F:  RRF    79,F
00A0:  RRF    7A,F
00A1:  RRF    39,F
00A2:  GOTO   0A6
00A3:  DECF   77,F
00A4:  BTFSC  03.2
00A5:  GOTO   0E8
00A6:  BTFSC  39.7
00A7:  GOTO   0CF
00A8:  BCF    03.0
00A9:  RLF    34,F
00AA:  RLF    35,F
00AB:  RLF    36,F
00AC:  RLF    37,F
00AD:  MOVF   33,W
00AE:  SUBWF  34,F
00AF:  BTFSC  03.0
00B0:  GOTO   0BB
00B1:  MOVLW  01
00B2:  SUBWF  35,F
00B3:  BTFSC  03.0
00B4:  GOTO   0BB
00B5:  SUBWF  36,F
00B6:  BTFSC  03.0
00B7:  GOTO   0BB
00B8:  SUBWF  37,F
00B9:  BTFSS  03.0
00BA:  GOTO   0DE
00BB:  MOVF   32,W
00BC:  SUBWF  35,F
00BD:  BTFSC  03.0
00BE:  GOTO   0C6
00BF:  MOVLW  01
00C0:  SUBWF  36,F
00C1:  BTFSC  03.0
00C2:  GOTO   0C6
00C3:  SUBWF  37,F
00C4:  BTFSS  03.0
00C5:  GOTO   0DE
00C6:  MOVF   31,W
00C7:  IORLW  80
00C8:  SUBWF  36,F
00C9:  BTFSC  03.0
00CA:  GOTO   0CF
00CB:  MOVLW  01
00CC:  SUBWF  37,F
00CD:  BTFSS  03.0
00CE:  GOTO   0DE
00CF:  INCF   7A,F
00D0:  BTFSS  03.2
00D1:  GOTO   0DE
00D2:  INCF   79,F
00D3:  BTFSS  03.2
00D4:  GOTO   0DE
00D5:  INCF   78,F
00D6:  BTFSS  03.2
00D7:  GOTO   0DE
00D8:  INCF   77,F
00D9:  BTFSC  03.2
00DA:  GOTO   0E8
00DB:  RRF    78,F
00DC:  RRF    79,F
00DD:  RRF    7A,F
00DE:  MOVF   2D,W
00DF:  MOVWF  38
00E0:  MOVF   31,W
00E1:  XORWF  38,F
00E2:  BTFSS  38.7
00E3:  GOTO   0E6
00E4:  BSF    78.7
00E5:  GOTO   0EC
00E6:  BCF    78.7
00E7:  GOTO   0EC
00E8:  CLRF   77
00E9:  CLRF   78
00EA:  CLRF   79
00EB:  CLRF   7A
00EC:  RETURN
00ED:  MOVF   29,W
00EE:  MOVWF  30
00EF:  MOVF   2D,W
00F0:  XORWF  30,F
00F1:  BTFSS  30.7
00F2:  GOTO   0F8
00F3:  BCF    03.2
00F4:  BCF    03.0
00F5:  BTFSC  29.7
00F6:  BSF    03.0
00F7:  GOTO   12B
00F8:  MOVF   29,W
00F9:  MOVWF  30
00FA:  MOVF   2C,W
00FB:  MOVWF  31
00FC:  MOVF   28,W
00FD:  SUBWF  31,F
00FE:  BTFSC  03.2
00FF:  GOTO   106
0100:  BTFSS  30.7
0101:  GOTO   12B
0102:  MOVF   03,W
0103:  XORLW  01
0104:  MOVWF  03
0105:  GOTO   12B
0106:  MOVF   2D,W
0107:  MOVWF  31
0108:  MOVF   29,W
0109:  SUBWF  31,F
010A:  BTFSC  03.2
010B:  GOTO   112
010C:  BTFSS  30.7
010D:  GOTO   12B
010E:  MOVF   03,W
010F:  XORLW  01
0110:  MOVWF  03
0111:  GOTO   12B
0112:  MOVF   2E,W
0113:  MOVWF  31
0114:  MOVF   2A,W
0115:  SUBWF  31,F
0116:  BTFSC  03.2
0117:  GOTO   11E
0118:  BTFSS  30.7
0119:  GOTO   12B
011A:  MOVF   03,W
011B:  XORLW  01
011C:  MOVWF  03
011D:  GOTO   12B
011E:  MOVF   2F,W
011F:  MOVWF  31
0120:  MOVF   2B,W
0121:  SUBWF  31,F
0122:  BTFSC  03.2
0123:  GOTO   12A
0124:  BTFSS  30.7
0125:  GOTO   12B
0126:  MOVF   03,W
0127:  XORLW  01
0128:  MOVWF  03
0129:  GOTO   12B
012A:  BCF    03.0
012B:  RETURN
....................  
.................... #list 
....................  
.................... #use delay(clock=8M) 
.................... #fuses NOLVP,NOWDT,HS 
.................... #define trig pin_B0 
.................... #define echo pin_B1 
.................... #use standard_io(b) 
.................... float d,t; 
....................  
.................... void main(){ 
012C:  MOVF   03,W
012D:  ANDLW  1F
012E:  MOVWF  03
012F:  BSF    03.5
0130:  BSF    1F.0
0131:  BSF    1F.1
0132:  BSF    1F.2
0133:  BCF    1F.3
0134:  MOVLW  07
0135:  MOVWF  1C
0136:  BCF    03.7
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
0137:  MOVLW  85
0138:  BCF    03.5
0139:  MOVWF  10
....................    while(true){ 
....................       output_high(trig); 
013A:  BSF    03.5
013B:  BCF    06.0
013C:  BCF    03.5
013D:  BSF    06.0
....................       delay_us(10); 
013E:  MOVLW  06
013F:  MOVWF  77
0140:  DECFSZ 77,F
0141:  GOTO   140
0142:  NOP
....................       output_low(trig); 
0143:  BSF    03.5
0144:  BCF    06.0
0145:  BCF    03.5
0146:  BCF    06.0
....................       while(!input(echo)) 
0147:  BSF    03.5
0148:  BSF    06.1
0149:  BCF    03.5
014A:  BTFSS  06.1
....................       {} 
014B:  GOTO   147
....................       set_timer1(0); 
014C:  CLRF   0E
014D:  CLRF   0F
014E:  CLRF   0E
....................       while(input(echo)) 
014F:  BSF    03.5
0150:  BSF    06.1
0151:  BCF    03.5
0152:  BTFSC  06.1
....................       {} 
0153:  GOTO   14F
....................       t=get_timer1(); 
0154:  MOVF   0F,W
0155:  MOVWF  7A
0156:  MOVF   0E,W
0157:  MOVWF  77
0158:  MOVF   0F,W
0159:  SUBWF  7A,W
015A:  BTFSS  03.2
015B:  GOTO   154
015C:  MOVF   77,W
015D:  MOVWF  28
015E:  MOVF   7A,W
015F:  MOVWF  29
0160:  GOTO   004
0161:  MOVF   7A,W
0162:  MOVWF  27
0163:  MOVF   79,W
0164:  MOVWF  26
0165:  MOVF   78,W
0166:  MOVWF  25
0167:  MOVF   77,W
0168:  MOVWF  24
....................       d=(t/2)/(29.15); 
0169:  MOVF   27,W
016A:  MOVWF  2F
016B:  MOVF   26,W
016C:  MOVWF  2E
016D:  MOVF   25,W
016E:  MOVWF  2D
016F:  MOVF   24,W
0170:  MOVWF  2C
0171:  CLRF   33
0172:  CLRF   32
0173:  CLRF   31
0174:  MOVLW  80
0175:  MOVWF  30
0176:  CALL   023
0177:  MOVF   7A,W
0178:  MOVWF  2B
0179:  MOVF   79,W
017A:  MOVWF  2A
017B:  MOVF   78,W
017C:  MOVWF  29
017D:  MOVF   77,W
017E:  MOVWF  28
017F:  MOVF   7A,W
0180:  MOVWF  2F
0181:  MOVF   79,W
0182:  MOVWF  2E
0183:  MOVF   78,W
0184:  MOVWF  2D
0185:  MOVF   77,W
0186:  MOVWF  2C
0187:  MOVLW  33
0188:  MOVWF  33
0189:  MOVWF  32
018A:  MOVLW  69
018B:  MOVWF  31
018C:  MOVLW  83
018D:  MOVWF  30
018E:  CALL   023
018F:  MOVF   7A,W
0190:  MOVWF  23
0191:  MOVF   79,W
0192:  MOVWF  22
0193:  MOVF   78,W
0194:  MOVWF  21
0195:  MOVF   77,W
0196:  MOVWF  20
....................        
....................       if(d<35){ 
0197:  MOVF   23,W
0198:  MOVWF  2B
0199:  MOVF   22,W
019A:  MOVWF  2A
019B:  MOVF   21,W
019C:  MOVWF  29
019D:  MOVF   20,W
019E:  MOVWF  28
019F:  CLRF   2F
01A0:  CLRF   2E
01A1:  MOVLW  0C
01A2:  MOVWF  2D
01A3:  MOVLW  84
01A4:  MOVWF  2C
01A5:  CALL   0ED
01A6:  BTFSS  03.0
01A7:  GOTO   1C0
....................          output_low(pin_b7); 
01A8:  BSF    03.5
01A9:  BCF    06.7
01AA:  BCF    03.5
01AB:  BCF    06.7
....................          output_low(pin_b6); 
01AC:  BSF    03.5
01AD:  BCF    06.6
01AE:  BCF    03.5
01AF:  BCF    06.6
....................          output_low(pin_b5); 
01B0:  BSF    03.5
01B1:  BCF    06.5
01B2:  BCF    03.5
01B3:  BCF    06.5
....................          output_low(pin_b4); 
01B4:  BSF    03.5
01B5:  BCF    06.4
01B6:  BCF    03.5
01B7:  BCF    06.4
....................          output_low(pin_b3); 
01B8:  BSF    03.5
01B9:  BCF    06.3
01BA:  BCF    03.5
01BB:  BCF    06.3
....................          output_low(pin_b2); 
01BC:  BSF    03.5
01BD:  BCF    06.2
01BE:  BCF    03.5
01BF:  BCF    06.2
....................       } 
....................        
....................       if(d<30){ 
01C0:  MOVF   23,W
01C1:  MOVWF  2B
01C2:  MOVF   22,W
01C3:  MOVWF  2A
01C4:  MOVF   21,W
01C5:  MOVWF  29
01C6:  MOVF   20,W
01C7:  MOVWF  28
01C8:  CLRF   2F
01C9:  CLRF   2E
01CA:  MOVLW  70
01CB:  MOVWF  2D
01CC:  MOVLW  83
01CD:  MOVWF  2C
01CE:  CALL   0ED
01CF:  BTFSS  03.0
01D0:  GOTO   1E9
....................          output_high(pin_b7); 
01D1:  BSF    03.5
01D2:  BCF    06.7
01D3:  BCF    03.5
01D4:  BSF    06.7
....................          output_low(pin_b6); 
01D5:  BSF    03.5
01D6:  BCF    06.6
01D7:  BCF    03.5
01D8:  BCF    06.6
....................          output_low(pin_b5); 
01D9:  BSF    03.5
01DA:  BCF    06.5
01DB:  BCF    03.5
01DC:  BCF    06.5
....................          output_low(pin_b4); 
01DD:  BSF    03.5
01DE:  BCF    06.4
01DF:  BCF    03.5
01E0:  BCF    06.4
....................          output_low(pin_b3); 
01E1:  BSF    03.5
01E2:  BCF    06.3
01E3:  BCF    03.5
01E4:  BCF    06.3
....................          output_low(pin_b2); 
01E5:  BSF    03.5
01E6:  BCF    06.2
01E7:  BCF    03.5
01E8:  BCF    06.2
....................       } 
....................        
....................       if(d<25){ 
01E9:  MOVF   23,W
01EA:  MOVWF  2B
01EB:  MOVF   22,W
01EC:  MOVWF  2A
01ED:  MOVF   21,W
01EE:  MOVWF  29
01EF:  MOVF   20,W
01F0:  MOVWF  28
01F1:  CLRF   2F
01F2:  CLRF   2E
01F3:  MOVLW  48
01F4:  MOVWF  2D
01F5:  MOVLW  83
01F6:  MOVWF  2C
01F7:  CALL   0ED
01F8:  BTFSS  03.0
01F9:  GOTO   212
....................          output_high(pin_b7); 
01FA:  BSF    03.5
01FB:  BCF    06.7
01FC:  BCF    03.5
01FD:  BSF    06.7
....................          output_high(pin_b6); 
01FE:  BSF    03.5
01FF:  BCF    06.6
0200:  BCF    03.5
0201:  BSF    06.6
....................          output_low(pin_b5); 
0202:  BSF    03.5
0203:  BCF    06.5
0204:  BCF    03.5
0205:  BCF    06.5
....................          output_low(pin_b4); 
0206:  BSF    03.5
0207:  BCF    06.4
0208:  BCF    03.5
0209:  BCF    06.4
....................          output_low(pin_b3); 
020A:  BSF    03.5
020B:  BCF    06.3
020C:  BCF    03.5
020D:  BCF    06.3
....................          output_low(pin_b2); 
020E:  BSF    03.5
020F:  BCF    06.2
0210:  BCF    03.5
0211:  BCF    06.2
....................       } 
....................        
....................       if(d<20){ 
0212:  MOVF   23,W
0213:  MOVWF  2B
0214:  MOVF   22,W
0215:  MOVWF  2A
0216:  MOVF   21,W
0217:  MOVWF  29
0218:  MOVF   20,W
0219:  MOVWF  28
021A:  CLRF   2F
021B:  CLRF   2E
021C:  MOVLW  20
021D:  MOVWF  2D
021E:  MOVLW  83
021F:  MOVWF  2C
0220:  CALL   0ED
0221:  BTFSS  03.0
0222:  GOTO   23B
....................          output_high(pin_b7); 
0223:  BSF    03.5
0224:  BCF    06.7
0225:  BCF    03.5
0226:  BSF    06.7
....................          output_high(pin_b6); 
0227:  BSF    03.5
0228:  BCF    06.6
0229:  BCF    03.5
022A:  BSF    06.6
....................          output_high(pin_b5); 
022B:  BSF    03.5
022C:  BCF    06.5
022D:  BCF    03.5
022E:  BSF    06.5
....................          output_low(pin_b4); 
022F:  BSF    03.5
0230:  BCF    06.4
0231:  BCF    03.5
0232:  BCF    06.4
....................          output_low(pin_b3); 
0233:  BSF    03.5
0234:  BCF    06.3
0235:  BCF    03.5
0236:  BCF    06.3
....................          output_low(pin_b2); 
0237:  BSF    03.5
0238:  BCF    06.2
0239:  BCF    03.5
023A:  BCF    06.2
....................       } 
....................        
....................       if(d<15){ 
023B:  MOVF   23,W
023C:  MOVWF  2B
023D:  MOVF   22,W
023E:  MOVWF  2A
023F:  MOVF   21,W
0240:  MOVWF  29
0241:  MOVF   20,W
0242:  MOVWF  28
0243:  CLRF   2F
0244:  CLRF   2E
0245:  MOVLW  70
0246:  MOVWF  2D
0247:  MOVLW  82
0248:  MOVWF  2C
0249:  CALL   0ED
024A:  BTFSS  03.0
024B:  GOTO   264
....................          output_high(pin_b7); 
024C:  BSF    03.5
024D:  BCF    06.7
024E:  BCF    03.5
024F:  BSF    06.7
....................          output_high(pin_b6); 
0250:  BSF    03.5
0251:  BCF    06.6
0252:  BCF    03.5
0253:  BSF    06.6
....................          output_high(pin_b5); 
0254:  BSF    03.5
0255:  BCF    06.5
0256:  BCF    03.5
0257:  BSF    06.5
....................          output_high(pin_b4); 
0258:  BSF    03.5
0259:  BCF    06.4
025A:  BCF    03.5
025B:  BSF    06.4
....................          output_low(pin_b3); 
025C:  BSF    03.5
025D:  BCF    06.3
025E:  BCF    03.5
025F:  BCF    06.3
....................          output_low(pin_b2); 
0260:  BSF    03.5
0261:  BCF    06.2
0262:  BCF    03.5
0263:  BCF    06.2
....................       } 
....................        
....................       if(d<10){ 
0264:  MOVF   23,W
0265:  MOVWF  2B
0266:  MOVF   22,W
0267:  MOVWF  2A
0268:  MOVF   21,W
0269:  MOVWF  29
026A:  MOVF   20,W
026B:  MOVWF  28
026C:  CLRF   2F
026D:  CLRF   2E
026E:  MOVLW  20
026F:  MOVWF  2D
0270:  MOVLW  82
0271:  MOVWF  2C
0272:  CALL   0ED
0273:  BTFSS  03.0
0274:  GOTO   28D
....................          output_high(pin_b7); 
0275:  BSF    03.5
0276:  BCF    06.7
0277:  BCF    03.5
0278:  BSF    06.7
....................          output_high(pin_b6); 
0279:  BSF    03.5
027A:  BCF    06.6
027B:  BCF    03.5
027C:  BSF    06.6
....................          output_high(pin_b5); 
027D:  BSF    03.5
027E:  BCF    06.5
027F:  BCF    03.5
0280:  BSF    06.5
....................          output_high(pin_b4); 
0281:  BSF    03.5
0282:  BCF    06.4
0283:  BCF    03.5
0284:  BSF    06.4
....................          output_high(pin_b3); 
0285:  BSF    03.5
0286:  BCF    06.3
0287:  BCF    03.5
0288:  BSF    06.3
....................          output_low(pin_b2); 
0289:  BSF    03.5
028A:  BCF    06.2
028B:  BCF    03.5
028C:  BCF    06.2
....................       } 
....................        
....................       if(d<5){ 
028D:  MOVF   23,W
028E:  MOVWF  2B
028F:  MOVF   22,W
0290:  MOVWF  2A
0291:  MOVF   21,W
0292:  MOVWF  29
0293:  MOVF   20,W
0294:  MOVWF  28
0295:  CLRF   2F
0296:  CLRF   2E
0297:  MOVLW  20
0298:  MOVWF  2D
0299:  MOVLW  81
029A:  MOVWF  2C
029B:  CALL   0ED
029C:  BTFSS  03.0
029D:  GOTO   2B6
....................          output_high(pin_b7); 
029E:  BSF    03.5
029F:  BCF    06.7
02A0:  BCF    03.5
02A1:  BSF    06.7
....................          output_high(pin_b6); 
02A2:  BSF    03.5
02A3:  BCF    06.6
02A4:  BCF    03.5
02A5:  BSF    06.6
....................          output_high(pin_b5); 
02A6:  BSF    03.5
02A7:  BCF    06.5
02A8:  BCF    03.5
02A9:  BSF    06.5
....................          output_high(pin_b4); 
02AA:  BSF    03.5
02AB:  BCF    06.4
02AC:  BCF    03.5
02AD:  BSF    06.4
....................          output_high(pin_b3); 
02AE:  BSF    03.5
02AF:  BCF    06.3
02B0:  BCF    03.5
02B1:  BSF    06.3
....................          output_high(pin_b2); 
02B2:  BSF    03.5
02B3:  BCF    06.2
02B4:  BCF    03.5
02B5:  BSF    06.2
....................       } 
02B6:  GOTO   13A
....................        
....................    } 
.................... } 
02B7:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
